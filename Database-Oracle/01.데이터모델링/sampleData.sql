
/************* 예시 데이터 삽입 전에 이미 존재하는 데이터 삭제 ************/ 
DROP TABLE TB_CUST CASCADE CONSTRAINTS; 
DROP TABLE TB_CUST_TEL CASCADE CONSTRAINTS;
DROP TABLE TB_CUST_ADDR CASCADE CONSTRAINTS;
DROP TABLE TB_CUST_IMG CASCADE CONSTRAINTS;
DROP TABLE TB_PRD CASCADE CONSTRAINTS; 
DROP TABLE TB_PRD_IMG CASCADE CONSTRAINTS;
DROP TABLE TB_BOARD CASCADE CONSTRAINTS;
DROP TABLE TB_BUY CASCADE CONSTRAINTS;
DROP TABLE TB_SELL CASCADE CONSTRAINTS;
DROP TABLE TB_GRADE CASCADE CONSTRAINTS;
DROP TABLE TB_QNA CASCADE CONSTRAINTS;
/******************************************************/


/*******************테이블 생성**********************/

CREATE TABLE TB_CUST (
	CUST_ID	  VARCHAR2(20)		        NOT NULL,
	CUST_NAME VARCHAR2(100)		        NOT NULL,
	PASSWD    VARCHAR2(300)		        NOT NULL,
	JUMIN_NO  VARCHAR2(300)		        NOT NULL,
	BIRTH_DY  VARCHAR2(8)		        NULL,
	JOIN_DT	  DATE		                NOT NULL,
	DEL_YN	  VARCHAR2(3)	DEFAULT 'N'	NOT NULL,
	SCORE	  NUMBER		            NOT NULL,
	MONEY	  NUMBER		            NOT NULL
);

CREATE TABLE TB_CUST_TEL (
	TEL_DVCD VARCHAR2(20)	NOT NULL,
	CUST_ID	 VARCHAR2(20)	NOT NULL,
	TEL_NO	 VARCHAR2(30)	NOT NULL
);

CREATE TABLE TB_CUST_ADDR (
	ADDR_DVCD VARCHAR2(20)	NOT NULL,
	CUST_ID	  VARCHAR2(20)	NOT NULL,
	ADDR	  VARCHAR2(300)	NOT NULL
);

CREATE TABLE TB_CUST_IMG (
	CUST_ID	  VARCHAR2(20)	NOT NULL,
	IMG_PATH  VARCHAR2(300)	NULL
);

CREATE TABLE TB_PRD (
	PRD_ID	 VARCHAR2(100)		        NOT NULL,
	REG_ID	 VARCHAR2(20)		        NOT NULL,
	PRD_NAME VARCHAR2(300)		        NOT NULL,
    PRD_DETAIL VARCHAR2(4000)           NULL, 
	PRD_AMT	 NUMBER		                NOT NULL,
	PRD_TYPE VARCHAR2(50)		        NOT NULL,
	REG_DT	 DATE		                NOT NULL,
	SOLD_OUT_YN	 VARCHAR2(3)   DEFAULT 'N'	NOT NULL
);

CREATE TABLE TB_PRD_IMG (
	IMG_SEQ	  NUMBER		    NOT NULL,
	PRD_ID	  VARCHAR2(100)		NOT NULL,
	IMG_PATH  VARCHAR2(300)		NOT NULL
);

CREATE TABLE TB_BOARD (
	BOARD_NO	    NUMBER       		NOT NULL,
	WRITER	        VARCHAR2(50)		NOT NULL,
	BOARD_CONTENT	VARCHAR2(4000)		NOT NULL,
	REG_DT	        DATE    	    	NOT NULL
);

CREATE TABLE TB_BUY (
	BUY_ID	    VARCHAR2(30)		NOT NULL,
	PRD_ID	    VARCHAR2(100)		NOT NULL,
	CUST_ID	    VARCHAR2(20)		NOT NULL,
	BUY_DT	    DATE		        NOT NULL
);

CREATE TABLE TB_SELL (
	SELL_ID	    VARCHAR2(30)		NOT NULL,
	PRD_ID	    VARCHAR2(100)		NOT NULL,
	CUST_ID	    VARCHAR2(20)		NOT NULL,
	SELL_DT	    DATE		        NOT NULL
);

CREATE TABLE TB_GRADE (
	GRADE_CD	NUMBER		 NOT NULL,
	GRADE_NAME	VARCHAR2(30) NOT NULL,
	STS_SCORE	NUMBER		 NOT NULL,
	END_SCORE	NUMBER		 NOT NULL
);

CREATE TABLE TB_QNA (
	QNA_ID	            VARCHAR2(20)		        NOT NULL,
	QNA_CONTENT	        VARCHAR2(4000)		        NOT NULL,
	QNA_DT	            DATE		                NOT NULL,
	QNA_CHECK	        VARCHAR2(10) DEFAULT 'N'	NOT NULL,
	QNA_ANSWER	        VARCHAR2(4000)		        NULL,
	QNA_ANSWER_DT	    DATE		                NULL,
	QNA_ANSWER_CHECK	VARCHAR2(10)		        NULL,
	CUST_ID	            VARCHAR2(20)		        NOT NULL
);


/*******************테이블 코멘트 생성**********************/

COMMENT ON COLUMN TB_CUST.CUST_ID IS '회원아이디';
COMMENT ON COLUMN TB_CUST.CUST_NAME IS '회원이름';
COMMENT ON COLUMN TB_CUST.PASSWD IS '비밀번호';
COMMENT ON COLUMN TB_CUST.JUMIN_NO IS '주민등록번호';
COMMENT ON COLUMN TB_CUST.BIRTH_DY IS '생일(YYYYMMDD)';
COMMENT ON COLUMN TB_CUST.JOIN_DT IS '가입일시';
COMMENT ON COLUMN TB_CUST.DEL_YN IS '탈퇴여부(기본은 N)';
COMMENT ON COLUMN TB_CUST.SCORE IS '가입시 0 , 최대 100';
COMMENT ON COLUMN TB_CUST.MONEY IS '가입시 0';
COMMENT ON COLUMN TB_CUST_TEL.TEL_DVCD IS '연락처구분코드';
COMMENT ON COLUMN TB_CUST_TEL.CUST_ID IS '회원아이디';
COMMENT ON COLUMN TB_CUST_TEL.TEL_NO IS '연락처번호';
COMMENT ON COLUMN TB_CUST_ADDR.ADDR_DVCD IS '주소구분코드';
COMMENT ON COLUMN TB_CUST_ADDR.CUST_ID IS '회원아이디';
COMMENT ON COLUMN TB_CUST_IMG.CUST_ID IS '회원아이디';
COMMENT ON COLUMN TB_CUST_IMG.IMG_PATH IS '이미지경로';
COMMENT ON COLUMN TB_PRD.PRD_ID IS '상품ID';
COMMENT ON COLUMN TB_PRD.REG_ID IS '해당상품을등록한회원ID';
COMMENT ON COLUMN TB_PRD.PRD_NAME IS '상품이름';
COMMENT ON COLUMN TB_PRD.PRD_AMT IS '상품가격';
COMMENT ON COLUMN TB_PRD.PRD_TYPE IS '상품타입';
COMMENT ON COLUMN TB_PRD.REG_DT IS '해당상품이등록된시점';
COMMENT ON COLUMN TB_PRD.SOLD_OUT_YN IS '품절(OUT 0F STOCK) 여부 - 기본 N';
COMMENT ON COLUMN TB_PRD_IMG.IMG_SEQ IS '이미지순번';
COMMENT ON COLUMN TB_PRD_IMG.PRD_ID IS '상품ID';
COMMENT ON COLUMN TB_PRD_IMG.IMG_PATH IS '이미지경로';
COMMENT ON COLUMN TB_BOARD.BOARD_NO IS '게시판아이디';
COMMENT ON COLUMN TB_BOARD.WRITER IS '작성자 (여기서는 관리자만 가능)';
COMMENT ON COLUMN TB_BOARD.BOARD_CONTENT IS '게시물내용';
COMMENT ON COLUMN TB_BOARD.REG_DT IS '게시물을 등록한 일시';
COMMENT ON COLUMN TB_BUY.BUY_ID IS '구매아이디';
COMMENT ON COLUMN TB_BUY.PRD_ID IS '상품ID';
COMMENT ON COLUMN TB_BUY.CUST_ID IS '회원아이디';
COMMENT ON COLUMN TB_BUY.BUY_DT IS '상품구매일시';
COMMENT ON COLUMN TB_SELL.SELL_ID IS '판매아이디';
COMMENT ON COLUMN TB_SELL.PRD_ID IS '상품ID';
COMMENT ON COLUMN TB_SELL.CUST_ID IS '회원아이디';
COMMENT ON COLUMN TB_SELL.SELL_DT IS '상품판매일시';
COMMENT ON COLUMN TB_GRADE.GRADE_CD IS '등급코드';
COMMENT ON COLUMN TB_GRADE.GRADE_NAME IS '등급명';
COMMENT ON COLUMN TB_GRADE.STS_SCORE IS '시작 점수로 최소 이 점수는 받아야 해당 등급가능';
COMMENT ON COLUMN TB_GRADE.END_SCORE IS '종료 점수로 최대 이 점수는 받아야 해당 등급가능';
COMMENT ON COLUMN TB_QNA.QNA_ID IS '문의아이디';
COMMENT ON COLUMN TB_QNA.QNA_CONTENT IS '문의내용';
COMMENT ON COLUMN TB_QNA.QNA_DT IS '문의일시';
COMMENT ON COLUMN TB_QNA.QNA_CHECK IS '입력시 N';
COMMENT ON COLUMN TB_QNA.QNA_ANSWER IS '문의에 대한 답변';
COMMENT ON COLUMN TB_QNA.QNA_ANSWER_DT IS '문의에 대한 답변일시';
COMMENT ON COLUMN TB_QNA.QNA_ANSWER_CHECK IS '문의답변확인여부';
COMMENT ON COLUMN TB_QNA.CUST_ID IS '문의자아이디';


/*******************테이블 PRIMARY KEY 제약조건 **********************/
ALTER TABLE TB_CUST ADD CONSTRAINT PK_TB_CUST PRIMARY KEY (CUST_ID);
ALTER TABLE TB_CUST_TEL ADD CONSTRAINT PK_TB_CUST_TEL PRIMARY KEY (CUST_ID , TEL_DVCD);
ALTER TABLE TB_CUST_ADDR ADD CONSTRAINT PK_TB_CUST_ADDR PRIMARY KEY (CUST_ID , ADDR_DVCD);
ALTER TABLE TB_CUST_IMG ADD CONSTRAINT PK_TB_CUST_IMG PRIMARY KEY (CUST_ID);
ALTER TABLE TB_PRD ADD CONSTRAINT PK_TB_PRD PRIMARY KEY (PRD_ID);
ALTER TABLE TB_PRD_IMG ADD CONSTRAINT PK_TB_PRD_IMG PRIMARY KEY (PRD_ID , IMG_SEQ);
ALTER TABLE TB_BOARD ADD CONSTRAINT PK_TB_BOARD PRIMARY KEY (BOARD_NO);
ALTER TABLE TB_BUY ADD CONSTRAINT PK_TB_BUY PRIMARY KEY (BUY_ID);
ALTER TABLE TB_SELL ADD CONSTRAINT PK_TB_SELL PRIMARY KEY (SELL_ID);
ALTER TABLE TB_GRADE ADD CONSTRAINT PK_TB_GRADE PRIMARY KEY (GRADE_CD);
ALTER TABLE TB_QNA ADD CONSTRAINT PK_TB_QNA PRIMARY KEY (QNA_ID);



/*******************테이블 FOREIGN KEY 제약조건 **********************/


ALTER TABLE TB_CUST_TEL ADD CONSTRAINT FK_CUST_TEL FOREIGN KEY (CUST_ID)
REFERENCES TB_CUST (CUST_ID) ON DELETE CASCADE;

ALTER TABLE TB_CUST_ADDR ADD CONSTRAINT FK_CUST_ADDR FOREIGN KEY (CUST_ID)
REFERENCES TB_CUST (CUST_ID) ON DELETE CASCADE;

-- 회원이 함께 삭제될경우 회원 이미지도 연쇄 삭제(ON DELETE CASCADE 처리
ALTER TABLE TB_CUST_IMG ADD CONSTRAINT FK_CUST_IMG FOREIGN KEY (CUST_ID)
REFERENCES TB_CUST (CUST_ID) ON DELETE CASCADE ; 

--상품이 함께 삭제될 경우 이미지도 연쇄 삭제(ON DELETE CASCADE) 처리 
ALTER TABLE TB_PRD_IMG ADD CONSTRAINT FK_PRODUCT_IMG FOREIGN KEY (PRD_ID)
REFERENCES TB_PRD (PRD_ID);


/*******************테이블 데이터 삽입 *********************/

--TB_GRADE
INSERT INTO TB_GRADE VALUES( 1 , '브론즈' , 0 , 20);
INSERT INTO TB_GRADE VALUES( 2 , '실버' , 21, 40);
INSERT INTO TB_GRADE VALUES( 3 , '골드' , 41 , 60);
INSERT INTO TB_GRADE VALUES( 4 , 'VIP' , 61 , 80);
INSERT INTO TB_GRADE VALUES( 5 , 'VVIP', 81 , 100);
COMMIT;

--TB_CUST
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0001', '고객001', 'pass111', '880101-1234567', '19880101', TO_DATE('20230101051231' , 'YYYYMMDDHH24MISS'), 'N',  21 ,  10000);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0002', '고객002', 'pass222', '910202-9876543', '19910202', TO_DATE('20230215121212' , 'YYYYMMDDHH24MISS'), 'N', 50 , 2000000);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0003', '고객003', 'pass333', '920303-1234567', '19920303', TO_DATE('20230320212323' , 'YYYYMMDDHH24MISS'), 'N', 65 , 150000);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0004', '고객004', 'pass444', '930404-2345678', '19930404', TO_DATE('20230425225512' , 'YYYYMMDDHH24MISS'), 'N', 87 , 400);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0005', '고객005', 'pass555', '940505-3456789', '19940505', TO_DATE('20230530231111' , 'YYYYMMDDHH24MISS'), 'N', 99 , 5000);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0006', '고객006', 'pass666', '950606-4567890', '19950606', TO_DATE('20230605002312' , 'YYYYMMDDHH24MISS'), 'N', 0 , 10000);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0007', '고객007', 'pass777', '960707-5678901', '19960707', TO_DATE('20220710112233' , 'YYYYMMDDHH24MISS'), 'N', 11 , 200000);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0008', '고객008', 'pass888', '970808-6789012', '19970808', TO_DATE('20220815223344' , 'YYYYMMDDHH24MISS'), 'N', 37, 33500);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0009', '고객009', 'pass999', '980909-7890123', '19980909', TO_DATE('20210920091212' , 'YYYYMMDDHH24MISS'), 'N', 66 , 40700);
INSERT INTO TB_CUST (CUST_ID, CUST_NAME, PASSWD, JUMIN_NO, BIRTH_DY, JOIN_DT, DEL_YN, SCORE , MONEY) VALUES
('C0010', '고객010', 'pass101', '990010-8901234', '19991010', TO_DATE('20211025072323', 'YYYYMMDDHH24MISS'), 'N', 88 , 31230);
 
UPDATE TB_CUST SET BIRTH_DY = NULL WHERE CUST_ID IN ('C0007' , 'C0005' ); 
COMMIT;


-- TB_CUST_TEL
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('집', 'C0001', '010-1234-5678');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('휴대폰', 'C0001', '010-9876-5432');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('집', 'C0002', '02-1234-5678');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('휴대폰', 'C0002', '010-9876-5432');  
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('휴대폰', 'C0003', '010-1111-2222');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('회사', 'C0004', '031-123-4567');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('휴대폰', 'C0005', '010-2222-3333');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('집', 'C0006', '031-2345-6789');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('휴대폰', 'C0007', '010-3333-4444');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('회사', 'C0008', '02-5678-9012');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('휴대폰', 'C0009', '010-4444-5555');
INSERT INTO TB_CUST_TEL (TEL_DVCD, CUST_ID, TEL_NO) VALUES('집', 'C0010', '031-3456-7890');

UPDATE TB_CUST_TEL SET TEL_NO = REPLACE(TEL_NO , '-' , '') ; 
COMMIT;

-- TB_CUST_ADDR
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('집', 'C0001', '서울특별시 중구 254');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('회사', 'C0001', '경기도 성남 분당 222');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('집', 'C0002', '서울특별시 강남구 123');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('회사', 'C0002', '경기도 수원시 456');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('집', 'C0003', '부산광역시 해운대구 789');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('회사', 'C0003', '대구광역시 중구 321');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('집', 'C0004', '인천광역시 서구 987');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('회사', 'C0004', '울산광역시 남구 654');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('집', 'C0005', '대전광역시 동구 456');
INSERT INTO TB_CUST_ADDR (ADDR_DVCD, CUST_ID, ADDR) VALUES('회사', 'C0005', '광주광역시 서구 789');
COMMIT;

--TB_BOARD 
INSERT INTO TB_BOARD
SELECT LEVEL                                            -- 게시판번호
        , 'ADMIN'                                       -- 작성자 
        , '이 게시물은 게시판 번호가 ' || LEVEL || '입니다'   -- 게시물내용 
      , TO_DATE('20210501') + ( TRUNC( LEVEL / 1000) + 1)         --2022년 1월1일부터 하루씩 게시물이 입력되는 것
  FROM DUAL
CONNECT BY LEVEL <=700000;                 --70만건의 데이터 입력 
--위 명령은 70만건의 데이터를 넣는 명령이므로 시간이 좀 걸립니다. 천천히 기다려주세요.
COMMIT; 

--TB_CUST_IMG 
INSERT INTO TB_CUST_IMG VALUES ('C0001' , 'dgg_logo.png'); 
COMMIT;

INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0001', 'C0001' , '헤어드라이기' , '가전' , '머리를 아주 잘 말려주는 헤어드라이기 입니다.' , 30000 , TO_DATE('20230501122357' , 'YYYYMMDDHH24MISS') , 'N' ) ; 
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0002', 'C0001' , '에어컨', '가전', '더위를 싹 싹 날려주는 에어컨입니다.', 1500000, TO_DATE('20230501152222' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0003', 'C0001' , '세탁기', '가전', '옷을 깨끗하게 세탁해주는 세탁기입니다.', 600000, TO_DATE('20230502030212' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0004', 'C0001' , '건조기', '가전', '빠르고 간편하게 옷을 건조할 수 있는 건조기입니다.', 800000,  TO_DATE('20230502175525' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0005', 'C0001' , '노트북', '컴퓨터', '성능이 뛰어나고 가벼운 노트북입니다.', 1500000,TO_DATE('20230503235959' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0006', 'C0002' , '데스크탑', '컴퓨터', '강력한 성능을 가진 데스크탑 컴퓨터입니다.', 2000000, TO_DATE('20230503122337' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0007', 'C0002' , '태블릿', '컴퓨터', '가벼우면서도 다양한 기능을 갖춘 태블릿입니다.', 800000, TO_DATE('20230504221012' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0008', 'C0002' , '애플14', '스마트폰', '다양한 기능을 가진 스마트폰입니다.', 1200000, TO_DATE('20230504105523' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0010', 'C0003' ,'조아샴푸'  , '욕실용품' , '머리가 개운해지는 샴푸입니다.' , 20000 , TO_DATE('20230505190101' , 'YYYYMMDDHH24MISS') , 'N') ;
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0011', 'C0004' ,'주전자', '주방용품', '물을 끓이기에 적합한 주전자입니다.', 20000,  TO_DATE('20230506120000' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0012', 'C0004' ,'전기밥솥', '주방용품', '쌀맛이 좋아지는 전기밥솥입니다.', 80000, TO_DATE('20230506124728' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0013', 'C0005' , '냄비', '주방용품', '식재료를 끓이기에 적합한 냄비입니다.', 30000,  TO_DATE('20230507123456' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0014', 'C0005' , '칼', '주방용품', '식재료를 자르기에 적합한 칼입니다.', 15000,  TO_DATE('20230507122357' , 'YYYYMMDDHH24MISS') , 'N');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0015', 'C0005' , '수세미', '욕실용품', '욕실 청소에 사용되는 수세미입니다.', 5000,  TO_DATE('20230508110025' , 'YYYYMMDDHH24MISS') , 'Y');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0016', 'C0006' , '곰팡이제거제', '욕실용품', '곰팡이를 제거할 때 최고입니다.', 10000,  TO_DATE('20230508150010' , 'YYYYMMDDHH24MISS') , 'Y');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0017', 'C0006' , '샤워기', '욕실용품', '강력한 물줄기로 청결한 목욕을 즐길 수 있는 샤워기입니다.', 50000,  TO_DATE('20230509010101' , 'YYYYMMDDHH24MISS') , 'Y');
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0018', 'C0002' , '린스', '욕실용품', '찰랑거리는 머리를 가지고 싶다면 이 제품을 기억하세요' ,  20000 ,   TO_DATE('20230509001212' , 'YYYYMMDDHH24MISS') , 'Y') ; 
INSERT INTO TB_PRD(PRD_ID , REG_ID , PRD_NAME, PRD_TYPE , PRD_DETAIL , PRD_AMT  , REG_DT , SOLD_OUT_YN ) 
VALUES ('P0019', 'C0003' , '수건', '욕실용품', '호텔에서도 사용되는 고급소재의 친환경 타올 소재의 수건입니다.' , 5000,   TO_DATE('20230510215348' , 'YYYYMMDDHH24MISS') , 'Y') ; 

COMMIT; 

INSERT INTO TB_PRD_IMG (IMG_SEQ, PRD_ID, IMG_PATH) 
SELECT 1 , 'P0001' , 'hair_dryer.png' FROM DUAL UNION ALL 
SELECT 2 , 'P0002' , 'aircool.jpg' FROM DUAL UNION ALL 
SELECT 3 , 'P0003' , 'washing_machine.png' FROM DUAL UNION ALL 
SELECT 4 , 'P0004' , 'washing_dryer.jpg' FROM DUAL UNION ALL 
SELECT 5 , 'P0005' , 'notebook.jpg' FROM DUAL UNION ALL 
SELECT 6 , 'P0006' , 'desktop.png' FROM DUAL UNION ALL 
SELECT 7 , 'P0007' , 'gall_tab.jpg' FROM DUAL UNION ALL 
SELECT 8 , 'P0008' , 'apple14.png' FROM DUAL UNION ALL 
SELECT 9 , 'P0010' , 'shampoo.png' FROM DUAL UNION ALL 
SELECT 10 , 'P0011' , 'teapot.png' FROM DUAL UNION ALL 
SELECT 11 , 'P0012' , 'cockoo.jpg' FROM DUAL UNION ALL 
SELECT 12 , 'P0013' , 'cooking_pot.png' FROM DUAL UNION ALL 
SELECT 13 , 'P0014' , 'knife.png' FROM DUAL UNION ALL 
SELECT 14 , 'P0015' , 'susemi.png' FROM DUAL UNION ALL 
SELECT 15 , 'P0016' , 'gompang.png' FROM DUAL UNION ALL 
SELECT 16 , 'P0017' , 'shower.png' FROM DUAL UNION ALL 
SELECT 17 , 'P0018' , 'linse.png' FROM DUAL UNION ALL 
SELECT 18 , 'P0019' , 'towel.png' FROM DUAL;

COMMIT; 
--TB_BUY (구매자)
INSERT INTO TB_BUY (BUY_ID , PRD_ID , CUST_ID , BUY_DT) 
VALUES ('B0001' , 'P0015' , 'C0001' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0015')) ;
INSERT INTO TB_BUY (BUY_ID , PRD_ID , CUST_ID , BUY_DT) 
VALUES ('B0002' , 'P0016' , 'C0001' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0016')) ;
INSERT INTO TB_BUY (BUY_ID , PRD_ID , CUST_ID , BUY_DT) 
VALUES ('B0003' , 'P0017' , 'C0004' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0017')) ;
INSERT INTO TB_BUY (BUY_ID , PRD_ID , CUST_ID , BUY_DT) 
VALUES ('B0004' , 'P0018' , 'C0005' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0018')) ;
INSERT INTO TB_BUY (BUY_ID , PRD_ID , CUST_ID , BUY_DT) 
VALUES ('B0005' , 'P0019' , 'C0006' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0019')) ;

--TB_SELL 
INSERT INTO TB_SELL ( SELL_ID , PRD_ID , CUST_ID , SELL_DT ) 
VALUES ('S0001' , 'P0015' , 'C0005' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0015')) ;
INSERT INTO TB_SELL ( SELL_ID , PRD_ID , CUST_ID , SELL_DT ) 
VALUES ('S0002' , 'P0016' , 'C0006' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0016')) ;
INSERT INTO TB_SELL ( SELL_ID , PRD_ID , CUST_ID , SELL_DT ) 
VALUES ('S0003' , 'P0017' , 'C0006' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0017')) ;
INSERT INTO TB_SELL ( SELL_ID , PRD_ID , CUST_ID , SELL_DT ) 
VALUES ('S0004' , 'P0018' , 'C0002' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0018')) ;
INSERT INTO TB_SELL ( SELL_ID , PRD_ID , CUST_ID , SELL_DT ) 
VALUES ('S0005' , 'P0019' , 'C0003' , (SELECT REG_DT + 1 FROM TB_PRD WHERE PRD_ID = 'P0019')) ;

COMMIT ;

INSERT INTO TB_QNA(QNA_ID , QNA_CONTENT , QNA_DT , QNA_CHECK , QNA_ANSWER , QNA_ANSWER_DT , QNA_ANSWER_CHECK , CUST_ID) 
VALUES ( 1 , '상품관련 문의드립니다.' , TO_DATE('20230629122442' , 'YYYYMMDDHH24MISS') , 'N' , NULL , NULL , 'N' , 'C0001' ); 

INSERT INTO TB_QNA(QNA_ID , QNA_CONTENT , QNA_DT , QNA_CHECK , QNA_ANSWER , QNA_ANSWER_DT , QNA_ANSWER_CHECK , CUST_ID) 
VALUES ( 2 , '네고좀 가능할까요.. 제가 인천에 사는데 너무 멀어요 ㅠㅠㅠ' , TO_DATE('20230630152442' , 'YYYYMMDDHH24MISS') , 'Y' , '넹 안됩니다 ㅈㅅ' , TO_DATE('20230701125522' , 'YYYYMMDDHH24MISS') , 'N' , 'C0002' ); 

INSERT INTO TB_QNA(QNA_ID , QNA_CONTENT , QNA_DT , QNA_CHECK , QNA_ANSWER , QNA_ANSWER_DT , QNA_ANSWER_CHECK , CUST_ID) 
VALUES ( 3 , '상품 너무 좋네요 ㅎㅎㅎ 감사합니다!! ' , TO_DATE('20230626122442' , 'YYYYMMDDHH24MISS') , 'N' , NULL , NULL , 'N' , 'C0003' ); 

COMMIT; 

--추가 테이블 생성 

DROP TABLE 회원; 
DROP TABLE 회원연락처 ;

CREATE TABLE 회원 ( 
    회원ID VARCHAR2(20) PRIMARY KEY , 
      이름 VARCHAR2(50) 
);
INSERT INTO 회원 
SELECT 'A0001' , '동동일' FROM DUAL UNION ALL 
SELECT 'A0002' , '동동이' FROM DUAL UNION ALL 
SELECT 'A0003' , '동동삼' FROM DUAL ;

CREATE TABLE 회원연락처 ( 
    회원ID VARCHAR2(20) ,
    구분코드 VARCHAR2(20) , 
    연락처 VARCHAR2(30) ,
    PRIMARY KEY(회원ID , 구분코드 ) 
);

INSERT INTO 회원연락처
SELECT 'A0001' , '휴대폰' , '010-111-1111' FROM DUAL UNION ALL 
SELECT 'A0001' , '집전화' , '062-111-1111' FROM DUAL UNION ALL 
SELECT 'A0002' , '집전화' , '062-222-2222' FROM DUAL UNION ALL 
SELECT 'A0004' , '휴대폰' , '010-4444-4444' FROM DUAL ;

COMMIT; 


DROP SEQUENCE SEQ_PRD_ID ;
DROP SEQUENCE SEQ_PRD_IMG_ID ;
DROP SEQUENCE SEQ_BUY_ID;
DROP SEQUENCE SEQ_SELL_ID;

-- 시퀀스 생성 및 세팅
CREATE SEQUENCE SEQ_PRD_ID INCREMENT BY 1 ; 
SELECT SEQ_PRD_ID.NEXTVAL FROM DUAL CONNECT BY LEVEL <=19;
COMMIT; 

CREATE SEQUENCE SEQ_PRD_IMG_ID INCREMENT BY 1 ; 
SELECT SEQ_PRD_IMG_ID.NEXTVAL FROM DUAL CONNECT BY LEVEL <=18;
COMMIT ;

CREATE SEQUENCE SEQ_BUY_ID INCREMENT BY 1 ; 
SELECT SEQ_BUY_ID.NEXTVAL FROM DUAL CONNECT BY LEVEL <=5;

CREATE SEQUENCE SEQ_SELL_ID INCREMENT BY 1 ; 
SELECT SEQ_SELL_ID.NEXTVAL FROM DUAL CONNECT BY LEVEL <=5;





